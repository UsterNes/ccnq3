# non-loose-route.cfg -- handler for out-of-dialog (non loose-routed) messages
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------
# Out-of-Dialog messages
# -----------------------------------------------------------------

# With local URI

macro non_loose_route_handler
    xlog("L_DBG","DEBUG -- non_loose_route_handler -- NLR $rm $ru (Call-ID $ci)");

    # I believe these cannot be NLR in our config.
    if( is_method("BYE") || is_method("REFER") ) {
      sl_send_reply("403", "Forbidden");
      exit;
    }

    if(is_method("OPTIONS")) {
      sl_send_reply("405","Method not allowed");
      exit;
    }

    if(has_totag()) {
      if($DLG_status==NULL) {
        xlog("L_DBG","DEBUG -- NLR: to_tag but no dialog");
        if(!is_method("ACK")) {
          sl_send_reply("403", "No such dialog");
        }
        exit;
      }

      if(!validate_dialog()) {
        if(!is_method("ACK")) {
          sl_send_reply("403", "Invalid dialog");
        }
        exit;
      }

      xlog("L_DBG","DEBUG -- NLR: Validated Dialog");
      # fix_route_dialog();
    }

    if(!is_method("ACK")) {
      sl_send_reply("100", "Trying");
    }

    if(is_method("REGISTER")) {
      route(register-record-route);
      route(register-handler);
      exit;
    } else {
      # Make sure we stay in the path.
      record_route();
    }

    ## --- NAT

    route(nlr-nat);

    ## -- Authenticate, methods

    # Apparently authenticating SUBSCRIBE and NOTIFY isn't very popular.
    if(is_method("SUBSCRIBE")) {
      sl_send_reply("500", "Not implemented yet");
      exit;
      # route(forwarder);
      # exit;
    }

    if(is_method("NOTIFY")) {
      sl_send_reply("500", "Not implemented yet");
      exit;
      # lookup("location");
      # route(forwarder);
      # exit;
    }

    if(is_method("INVITE")) {
      route(authenticate);

      ${start_accounting}

      setflag(${flag_dialog});          # dlg_flag
      setflag(${flag_bye_on_timeout});  #
      create_dialog();
      route(invite-handler);   # INVITE message handler
      exit;
    }

    if(is_method("ACK") || is_method("CANCEL") || is_method("PRACK")) {
      route(forwarder-progress); # Route ACK/PRACK/CANCEL
      exit;
    }

    #
    # route(forwarder);
    #

    xlog("L_DBG","DBG -- non_loose_route_handler: Unsupported method $rm");
    sl_send_reply("501","Not implemented");

end macro non_loose_route_handler

# With non-local URI

macro non_local_uri_handler
    xlog("L_DBG","DEBUG -- non_local_uri_handler: Non-local RURI $ru");

    xlog("L_DBG","DEBUG -- non_local_uri_handler: Relaying forbidden");
    sl_send_reply("403", "Relaying Forbidden");
end macro non_local_uri_handler
