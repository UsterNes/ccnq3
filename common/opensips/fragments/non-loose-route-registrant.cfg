# non-loose-route-registrant.cfg -- handler for out-of-dialog (non loose-routed) messages
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------
# Out-of-Dialog messages
# -----------------------------------------------------------------

# With local URI

macro non_loose_route_handler
    xlog("L_DBG","-- non_loose_route_handler -- NLR $rm $ru (Call-ID $ci)");

    if(is_method("OPTIONS")) {
      t_reply("501","Not Implemented");
      exit;
    }
    route(authenticate);
    if(is_method("INVITE")) {
      if source_ip
      force_send_socket(${source_ip})
      end if source_ip
      if( is_present_hf("X-CCNQ3-Registrant-Password") ) {
        $avp(uac_user) = $rU;
        $avp(uac_pass) = $hdr(X-CCNQ3-Registrant-Password);
      }
      if( is_present_hf("X-CCNQ3-Registrant-Target") ) {
        $avp(uac_realm) = $hdr(X-CCNQ3-Registrant-Target);
        $ru = "sip:"+$rU+"@"+$hdr(X-CCNQ3-Registrant-Target);
        $var(b2bl_from) = "sip:"+$fU+"@"+$hdr(X-CCNQ3-Registrant-Target);
        remove_hf("X-CCNQ3-Registrant-Password");
        remove_hf("X-CCNQ3-Registrant-Target");
        remove_hf("X-CCNQ3-Extra");
        remove_hf("X-CCNQ3-Location");
        remove_hf("X-CCNQ3-MediaProxy");
        remove_hf("P-Charge-Info");
        remove_hf("X-CCNQ3-Attrs");
        remove_hf("P-Asserted-Identity");
        b2b_init_request("top hiding");
      } else {
        record_route();
        $ru = "sip:"+$rU+"@${local_ipv4}:${local_port}";
        create_dialog("B");
        t_relay();
      }
      exit;
    } else {
      $ru = "sip:"+$rU+"@${local_ipv4}:${local_port}";
      t_relay();
      exit;
    }

end macro non_loose_route_handler

# With non-local URI

macro non_local_uri_handler
    xlog("L_DBG","-- non_local_uri_handler: Non-local RURI $ru");

    xlog("L_DBG","-- non_local_uri_handler: Relaying forbidden");
    if(is_method("INVITE") || is_method("REGISTER")) {
      # This isn't the proper response code, but it blocks buggers trying
      # to come in using IP addresses instead of domain names, for example.
      sl_send_reply("200", "Relaying Forbidden");
    } else {
      t_reply("403", "Relaying Forbidden");
    }
end macro non_local_uri_handler
