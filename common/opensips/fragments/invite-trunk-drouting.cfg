# invite-trunk-side.cfg -- Failover using drouting
# Copyright (C) 2009  Stephane Alnet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# -----------------------------------------------------------------
# INVITE Message Handler
# -----------------------------------------------------------------

define use_drouting

route[invite-trunk-drouting]
{
  xlog("L_DBG","-- route(invite-trunk-drouting)");

  if( $(json(src_endpoint/outbound_route)) != null ) {
    $avp(outbound_route) = $(json(src_endpoint/outbound_route));
  } else {
    $avp(outbound_route) = "";
  }

  if( do_routing("$(avp(outbound_route))","${sort_order}") )
  {
    # Force send through
    if internal_ip
      force_send_socket(${internal_ip})
    end if internal_ip

    # remove any (transport,account,..) params from the RURI
    # ($rP contains current transport protocol)
    $ru = "sip:"+$rU+"@"+$rd+":"+$rp;

    xlog("L_DBG","-- route(invite-trunk-drouting): do_routing was successful");
    setflag(${flag_trunk_routing});
    t_on_branch("1");
    route(trunk-attributes);
    route(update-media-proxy);  # Start MP if needed
    route(initial-forwarder);   # Forward
    exit;
  }
}

route[trunk-attributes]
{
  xlog("L_DBG","-- route(trunk-attributes)");
  if($(avp(dr_rule_attrs){param.value,force_mp})) {
    xlog("L_DBG","-- route(trunk-attributes) -- forcing MediaProxy for route");
    setflag(${flag_request_mp_callee}); # force MP for callee
  }
  if not skip_uac_auth
    # Per-provider authentication
    xlog("L_DBG","-- route(trunk-attributes) -- gathering authentication");
    $(avp(uac_realm)) = $(avp(dr_gw_attrs){param.value,realm});
    $(avp(uac_user))  = $(avp(dr_gw_attrs){param.value,user});
    $(avp(uac_pass))  = $(avp(dr_gw_attrs){param.value,pass});
  end if not skip_uac_auth

}

branch_route[1]
{
    xlog("L_DBG","-- branch_route(1) Processing $rm $ru");
}
