# register-colocted.cfg -- REGISTER handler for a colocated registrar

# -----------------------------------------------------------------
# REGISTER Message Handler: Router and registrar co-located
# -----------------------------------------------------------------

# Router and registrar are co-located

  # REGISTER messages are processed locally.

route[register-handler]
{
    xlog("L_DBG","-- route(register-handler): REGISTER Message Handler from $source_uri");

    ${register_nat}

    if( if has_trusted allow_trusted() || end if has_trusted 0 ) {
        xlog("L_WARN", "WARNING -- route(register-handler): Trusted device $si ($fu) attempts to register");
    } else {
      route(authenticate_register);

      if (!db_check_to()) {
        xlog("L_WARN", "WARNING -- route(register-handler): Rogue device $si ($fu) attempts to register");
        t_reply("401", "Unauthorized");
        exit;
      };
    }

  if has_usrloc

    if usrloc_memory
    if( !save("${usrloc_table}","mf") ) {
    end if usrloc_memory

    if not usrloc_memory
    if( !save("${usrloc_table}","f") ) {
    end if not usrloc_memory

      xlog("L_ERR", "ERROR -- route(register-handler): could not save location $si ($fu).");
      t_reply("500", "Could not save location");
      exit;
    }
  end if has_usrloc
  exit;
}

# Co-located

macro lookup
  xlog("L_DBG","-- route lookup : Lookup $var(aor)");

  lookup("${usrloc_table}","","$var(aor)");
  $var(code) = $retcode;

  xlog("L_DBG","-- route lookup : Lookup returned $var(code)");
  switch ($var(code)) {
      case 1:
        xlog("L_DBG","-- route lookup : Contact found");
        break;

      # Contact found, method not supported.
      case -2:
        xlog("L_DBG","-- route(lookup): Contact found, method not supported.");
        t_reply("405", "Not Found");
        exit;
        break;

      # No contact found
      case -1:
        $var(replace_404_with_486) = 1;
      # Internal error
      case -3:
        route(static-line-side);
        break;
  };
end macro lookup
