#!/usr/bin/env bash
# (c) 2011 Stephane Alnet
# License: APGL3+

set -e
export LANG=
SRC="`pwd`"
DIR=/etc/ccnq3
CONF=${DIR}/host.json

if [ -e "${CONF}" ]; then
  echo "** ERROR: $CONF already exists **"
  exit 1
fi

HOSTNAME=`hostname`

if [ "x$1" == "x" ]; then
  echo "Proceeding with installation of CouchDB on local host ${HOSTNAME}"

  # Using 128 or higher does not work.
  ADMIN_PASSWORD=`openssl rand 64 -hex`

  export ADMIN_PASSWORD
  . bootstrap/couchdb
  CDB_URI="http://admin:${ADMIN_PASSWORD}@${HOSTNAME}:5984"
else
  # Provide a URI on the command-line for example if you already
  # have a CouchDB/BigCouch cluster and want to have CCNQ use it.
  CDB_URI="$1"
  shift
fi

echo "Creating ${CONF}"
tee "${CONF}" <<JSON >/dev/null
{
  "_id": "host:${HOSTNAME}",
  "type": "host",
  "host": "${HOSTNAME}",
  "admin": {
    "couchdb_uri": "${CDB_URI}"
  , "system": true
  }
, "applications": [
    "applications/usercode"
  , "applications/provisioning"
  , "applications/roles"
  , "applications/host"
  , "applications/portal"
  , "applications/inbox"
  , "public"
  , "applications/web"
  ]
, "source": "${SRC}"
, "account": ""
}
JSON
# applications/usercode: creates the usercode database: must be first since all others depend on it
# applications/provisioning: creates the provisioning database: must be second
# applications/roles: updates the _users databases: must be third
# applications/host: master/bootstrap host record in _users database
# applications/portal: portal pre-requires host
# Add any server-specific applications at the end of the (space-delimited) string.

echo "Update"
(cd && cd "${SRC}" \
    && npm run-script updates)

# Do not restart just yet.
echo "Bootstrap local host"
(cd && cd "${SRC}" \
    && npm run-script bootstrap)

echo "Restart"
(cd && cd "${SRC}" \
    && npm restart)

echo "Installation done."
echo
echo "Master interface: ${CDB_URI}/_utils/"
