* Content

etc/
  lighttpd2/  -- Proxy for main site
  monit/      -- System monitoring examples

applications/
  portal/     -- Registration, etc.
  roles/      -- On-the-fly creation of new (read) replicas from global databases
  prepaid/    -- Prepaid call handling
  cnam/       -- CNAM client

lib/          -- CoffeeScript libraries
  cdb         -- CouchDB access helpers
  cdb_changes -- monitor CouchDB _changes handler
  esl         -- Access to the FreeSwitch Event System
  json_req    -- An extension to the "request" module to handle JSON
  password    -- A memorable password generator

public/       -- Common content that should be installed under the root of the main site
  images/
  javascripts/
  stylesheets/

private/      -- Misc. application under development (might eventually move under applications/)

common/       -- Repository for other applications data
  freeswitch/
  mediaproxy/
  opensips/

slayers/      -- REST interfaces to other protocoles
  dsmlayer    -- The Dancer Session Manager used in ccnq2.0
  pgslayer    -- A generic REST-to-DBI interface

* Applications code layout

  agents/     -- Any background agents; most of them monitor CouchDB _changes and
              -- act upon insertion / modification ..
  couchapps/  -- CouchApps (in CoffeeScript)
              -- Normally called "_design/${application}" with ${application} the name
              -- of the application (to avoid conflicts).
  node/       -- Zappa REST APIs
  scripts/    -- FreeSwitch (Lua) scripts
  conf/       -- FreeSwitch configuration fragments (examples)

  *.config files are actually JSON documents

* APIs

In most cases (except for the core portal) the application is driven from the
web browser. Therefor most applications will provide REST/JSON APIs only.

Moreover these are only provided for databases updates (where the node/ code
allows writer access without allowing reader access to the global CouchDB databases).
For databases read, the application is a couchapp or (equivalently) static client-side
HTML and Javascript, accessing the "source+prefix"-specific database directly.
