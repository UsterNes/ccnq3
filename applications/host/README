The provisioning database is used to provide host-level configuration.

The expectation is that a new host would be provisioned with:
- node.js
- daemon
- npm packages
- either (a) couchdb and a valid replica of the provisioning database
      or (b) access to the central provisioning database (using $process@$hostname as its access token)
- the "host" agent running to accept further configuration instructions (as a user authorized to run "sudo" commands)

Note: (b) is probably a better option since, in both cases, some kind of access to the central database will be required.

The host-level code is stored (temporarily) in the "provisioning" database; outcomes are stored in the "log" database.
(Or centralized syslog might be required. For now the "log" database option is chosen.)

A "host"-type provisioning record might contain a "runnable" list of JavaScript code fragments. These will be executed in a context where the global "host" variable is accessible and contains a copy of the "host" database record.
