The portal is available as a zappa application. The application should be called
from your main HTML page; the minimal code to do this is:

  <html>
    <head>
      <link rel="stylesheet" href="/public/css/smoothness/jquery-ui.css" />
      <link rel="stylesheet" href="/public/css/datatables.css" />
    </head>
    <body>
      <div id="content">
        <div>
          <div id:'login_container'></div>
          <div id:'password_recovery_container'></div>
          <div id:'register_container'></div>
        </div>
      </div>
      <script src="/public/js/default.js" type="text/javascript"></script>
      <script src="/u/content.js" type="text/javascript"></script>
    </body>
  </html>

You might use $.extra_login to add processing at login time, for example:

  $(document).ready ->

    extra_login = $.extra_login
    $.extra_login = (auth,next) ->
      # Replicate any myportal record
      myportal_replicate = (auth,next) ->
        auth.notify 'Replicating your portal data.'

        options =
          type: 'post'
          url: '/roles/replicate/pull/myportal'
          dataType:'json'
          success: (data) ->
            if not data.ok
              auth.notify 'Portal replication failed.'
              return
            auth.notify ''
            next()

        auth.$.ajax(options)

    if extra_login?
      ##-- Make sure your code is ran last! --##
      extra_login auth, -> myportal_replicate auth, next
    else
      myportal_replicate auth, next

Once the user is logged in, the code will redirect to _design/portal/index.js .
