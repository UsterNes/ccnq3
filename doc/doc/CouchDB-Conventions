----- Conventions for usernames in CouchDB -----

For people, use people's actual email addresses.
For processes, use process_name@server_name.
  (For example: freeswitch@prepaid.example.net, replicator@cdb1.example.net.)
Reserve shortnames (no "@" sign) for admin accounts.

----- Conventions for CouchDB access -----

View as a single system (using potential scaling arch., replication).
(See BigCouch, CouchBase.)

Common definitions:
- Source databases are global databases containing the entire system information.
  Examples: "provisioning", "billing", "_users"

  They are only accessible by system accounts.

  The _users database is maintained by the "portal" application, which takes care of
  registering users, etc.

  The main provisioning database is never accessed directly, it is always replicated
  (to/from user databases, or to servers copies).

  The main billing database is accessed by system scripts that insert CDRs, provide
  summarization/invoicing, etc.

- User databases are databases accessible by a given user, who has "reader" rights only.
  A user's database's name is stored in that user's "_users" record as "user_database".
  It is freely accessible from an authenticated client, which locates it by querying for
  the user's profile data.

  User changes are processed and validated in the user database first.
  Authorization is enforced by the design documents found in the user database.
  (The user does not have database-admin access to their own database, which prevents
  them from circumscribing the design documents.)
  User changes are replicated back into the main/source (provisioning) database via a client
  trigger.

  Global changes are pulled into a user database from a source database using filters
  so that users only have access to authorized information. Pull operation is triggered by
  the client.

  Users may also freely replicate to/from their own databases if they wish.

- A user may have access to one or more account prefixes which are used to authorize
  operations.

  For example if an account is "ProviderA/ResellerB/CustomerC" then a prefix of
  "ProviderA/ResellerB/" would give access to that account (and others that share the same
  prefix).

- Individual operations are allowed based on the _users' standard "roles" array, using the format
  operation:database:account_prefix; for example:

    [ 'access:provisioning:ProviderA/ResellerB/', 'update:provisioning:ProviderA/ResellerB/CustomerC' ]

