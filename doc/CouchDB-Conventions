----- Conventions for username in CouchDB -----

For people, use people's actual email addresses.
For processes, use process_name@server_name.
  (For example: freeswitch@prepaid.example.net, replicator@cdb1.example.net.)
Reserve shortnames (no "@" sign) for admin accounts.

----- Conventions for CouchDB access -----

View as a single system (using potential scaling arch., replication).

Common definitions:
- Source databases are global databases containing the entire system information.
  Examples: "provisioning", "billing"

- Therefor a "source" is the name of such a global database, such as:
       billing
       provisioning
       _users
    "source" is also the name of that database, used as replication source.
    Source (global) databases can only be accessed via a node.js API process (which enforces the prefix-matching rules)
    (API access might be used for R/W access, since for some global databases no prefix-specific replication is provided.)

- Account identifiers are formatted as paths, for example:

  /path1/path2/path3/path4

  (format is site-dependent)

- A user may have access to one or more prefixes, which
  are path prefixes.
  (For example /path1/path2/ or /path1/path2/path3/path4 in the above example.)

- Therefor a "prefix" is an authorization prefix (format is site-dependent)
     matched against the "account" field in records (prefix must be a left-prefix of the account value for user to gain access)
     "prefix" is used as a replication filter on "source" to create a target database

- A "target database" is a database identified by a UUID which is a replicating copy of a "source" database with a "prefix" filter.
  The target database only contains record from the source database where the "account" field of the record has "prefix" as a left-prefix.
  The target database contains a security object that requires ${UUID}-reader access.

  Such a database is created for each user-assigned prefix and each source database.
  The database thus created is made available (as readers) to users whose
  "access" property list that prefix under the specified source.

  For example a "billing" database corresponding to the prefix  /path1/path2
  will be made accessible to users who have /path1/path2 listed
  as one of their "billing" access prefixes.

  The database is named using a UUID which can be found in the "databases"
  cross-reference CouchDB.

  A single database is kept per-source-and-prefix. The master databases
  (provisioning, cdr, etc.) are replicated into those databases.
  Uniqueness of IDs is enforced by using "type:key" IDs. (Provisioning
  will contain types such as "number", "endpoint", "location"; CDR will
  contain the "cdr" type.)

  Since readers have write (modify) access to the database, a user could
  add comments, etc., on a private database, which would not replicate
  into the master.


Common databases:

/_users record contain:
  access: { source: [prefix,..], .. }
  update: { source|application: [prefix,..], .. }

/databases maps between actual db-name (a UUID) and the associated role
  _id: JSON.stringify [source,prefix]
  uuid: UUID of database (CouchDB database name)
  source: same as source in _users (replication source)
  prefix: same as prefix in _users (replication filter)

/${UUID}
  one database created from a source db using replication and the prefix as filter
  security object requires "${UUID}-reader"
